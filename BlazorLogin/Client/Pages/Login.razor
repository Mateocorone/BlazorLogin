@page "/"
@layout LoginLayout


@inject HttpClient httpClient
@using BlazorLogin.Client.Extensiones
@using BlazorLogin.Shared
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.JSInterop;
@inject AuthenticationStateProvider autenticacionProvider
@inject NavigationManager navManager
@inject IJSRuntime JSRuntime

<div class="container" onclick="onclick">
    <div class="top"></div>
    <div class="bottom"></div>
    <div class="center">
        <h2>Login</h2>
        <label class="font-family-raleway">Correo electronico :</label>
        <input @bind="login.Correo" class="form-control" />
        <label>Contraseña :</label>
        <input @bind="login.Clave" class="form-control" />
            <button @onclick="IniciarSesion" class="btn btn-primary">Iniciar Sesion</button>
    </div>
</div>

<style>
    

*, *:before, *:after {
  box-sizing: border-box;
}

body {
  min-height: 50vh;
  font-family: "Raleway", sans-serif;
}

.container {
  position: center;
  width: 100%;
  height: 100%;
  overflow: hidden;
}
.container:hover .top:before, .container:hover .top:after, .container:hover .bottom:before, .container:hover .bottom:after, .container:active .top:before, .container:active .top:after, .container:active .bottom:before, .container:active .bottom:after {
  margin-left: 200px;
  transform-origin: -200px 50%;
  transition-delay: 0s;
}
.container:hover .center, .container:active .center {
  opacity: 1;
  transition-delay: 0.2s;
}

.top:before, .top:after, .bottom:before, .bottom:after {
  content: "";
  display: block;
  position: absolute;
  width: 200vmax;
  height: 200vmax;
  top: 50%;
  left: 50%;
  margin-top: -100vmax;
  transform-origin: 0 50%;
  transition: all 0.5s cubic-bezier(0.445, 0.05, 0, 1);
  z-index: 10;
  opacity: 0.65;
  transition-delay: 0.2s;
}

.top:before {
  transform: rotate(45deg);
  background: #e46569;
}
.top:after {
  transform: rotate(135deg);
  background: #ecaf81;
}

.bottom:before {
  transform: rotate(-45deg);
  background: #60b8d4;
}
.bottom:after {
  transform: rotate(-135deg);
  background: #3745b5;
}

.center {
  position: absolute;
  width: 400px;
  height: 400px;
  top: 50%;
  left: 50%;
  margin-left: -200px;
  margin-top: -200px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  padding: 30px;
  opacity: 0;
  transition: all 0.5s cubic-bezier(0.445, 0.05, 0, 1);
  transition-delay: 0s;
  color: #333;
}
.center input {
  width: 100%;
  padding: 15px;
  margin: 5px;
  border-radius: 1px;
  border: 1px solid #ccc;
  font-family: inherit;
}</style>


@code {
    private string mensajeError;
    private LoginDTO login = new LoginDTO();

    private async Task IniciarSesion()
    {
        var loginResponse = await httpClient.PostAsJsonAsync<LoginDTO>("/api/Usuario/Login", login);
        if (loginResponse.IsSuccessStatusCode)
        {
            var sesionUsuario = await loginResponse.Content.ReadFromJsonAsync<SesionDTO>();
            var autenticacionExt = (AutenticacionExtension)autenticacionProvider;
            await autenticacionExt.ActualizarEstadoAutenticacion(sesionUsuario);

            navManager.NavigateTo("/Index");
        }

        else
        {
            mensajeError = "Usuario o Contraseña incorrectas";
            await JSRuntime.InvokeVoidAsync("alert", mensajeError);
        }
       
    }
}

